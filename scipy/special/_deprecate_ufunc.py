import numpy as np


def deprecate_ufunc(ufunc, old_name, new_name, message):
    """
    Deprecate a ufunc in scipy.special.

    This function is based on `np.deprecate`, but it changes how the
    beginning of the docstring is modified.  The ufunc signature remains
    the first line of the deprecated docstring.

    This function assumes that the docstring of the ufunc follows the
    convention used in scipy.special, where the first few lines of the
    docstring are:

    * the signature that is generated by the NumPy ufunc machinery,
    * a blank line,
    * the short signature that is included by convention in the docstring
      that we write (see the docstring definitions in '_add_newdocs.py').

    For example, the docstring of `sph_harm` begins::

        sph_harm(x1, x2, x3, x4, /, out=None, *, where=True, [...], extobj])

        sph_harm(m, n, theta, phi, out=None)

        Compute spherical harmonics.

    After executing::

        sph_harm = deprecate_ufunc(sph_harm, 'sph_harm', 'new_name',
                                   message='Message line 1\nMessage line 2')

    the docstring of the updated `sph_harm` function begins::

        sph_harm(x1, x2, x3, x4, /, out=None, *, where=True, [...], extobj])

        sph_harm(m, n, theta, phi, out=None)

        `sph_harm` is deprecated, use `new_name` instead!
        Message line 1
        Message line 2

        Compute spherical harmonics.

    """
    new_func = np.deprecate(ufunc, old_name=old_name, new_name=new_name,
                            message=message)
    if new_func.__doc__ is not None:
        # Rearrange the first few lines of the docstring so the ufunc-generated
        # signature remains the first line.  This avoids a Sphinx warning when
        # the docs are build.
        lines = new_func.__doc__.split('\n')
        num_msg_lines = message.count('\n') + 1
        ufunc_sig_loc = 2 + num_msg_lines
        new_func.__doc__ = '\n'.join(lines[ufunc_sig_loc:ufunc_sig_loc + 4] +
                                     lines[:ufunc_sig_loc] +
                                     lines[ufunc_sig_loc + 4:])
    return new_func
