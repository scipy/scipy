!%f90 -*- f90 -*-
python module _specfun ! in
    interface  ! in :_specfun
        subroutine clqmn(mm,m,n,z,cqm,cqd) ! in :_specfun:specfun.f
            callstatement (*f2py_func)(&mm,&m,&n,&(z.r),&(z.i),cqm,cqd)
            callprotoargument int*,int*,int*,double*,double*,complex_double*,complex_double*
            integer intent(hide),depend(m) :: mm=m
            integer intent(in), check(m>=1) :: m
            integer intent(in), check(n>=1) :: n
            complex*16 intent(in) :: z
            complex*16 intent(out),dimension(0:mm,0:n),depend(mm,n) :: cqm
            complex*16 intent(out),dimension(0:mm,0:n),depend(mm,n) :: cqd
        end subroutine clqmn
        subroutine lqmn(mm,m,n,x,qm,qd) ! in :_specfun:specfun.f
          integer intent(hide), depend(m) :: mm=m
          integer intent(in), check(m>=1) :: m
          integer intent(in), check(n>=1) :: n
          double precision intent(in) :: x
          double precision intent(out),dimension(0:mm,0:n),depend(mm,n) :: qm
          double precision intent(out),dimension(0:mm,0:n),depend(mm,n) :: qd
        end subroutine lqmn
        subroutine clpmn(mm,m,n,x,y,ntype,cpm,cpd) ! in :_specfun:specfun.f
            integer intent(hide), depend(m) :: mm=m
            integer intent(in), check(m>=0) :: m
            integer intent(in), check(n>=0) :: n
            double precision intent(in) :: x
            double precision intent(in) :: y
            integer intent(in), check(ntype==2||ntype==3) :: ntype
            complex*16 intent(out),dimension(0:m,0:n),depend(m,n) :: cpm
            complex*16 intent(out),dimension(0:m,0:n),depend(m,n) :: cpd
        end subroutine clpmn
        subroutine jdzo(nt,n,m,pcode,zo) ! in :_specfun:specfun.f
            integer intent(in), check((nt>0)&&(nt<=1200)) :: nt
            integer depend(nt), intent(out), dimension(1400) :: n
            integer depend(nt), intent(out), dimension(1400) :: m
            integer depend(nt), intent(out), dimension(1400) :: pcode
            double precision intent(out), depend(nt), dimension(0:1400) :: zo
        end subroutine jdzo
        subroutine bernob(n,bn) ! in :_specfun:specfun.f
            integer intent(in), check(n>=2) :: n
            double precision intent(out),depend(n),dimension(n+1) :: bn
        end subroutine bernob
        subroutine clqn(n,z,cqn,cqd) ! in :_specfun:specfun.f
            callstatement (*f2py_func)(&n,&(z.r),&(z.i),cqn,cqd)
            callprotoargument int*,double*,double*,complex_double*,complex_double*
            integer intent(in), check(n>=1) :: n
            complex*16 intent(in) :: z
            complex*16 intent(out),dimension(n+1),depend(n) :: cqn
            complex*16 intent(out),dimension(n+1),depend(n) :: cqd
        end subroutine clqn
        subroutine airyzo(nt,kf,xa,xb,xc,xd) ! in :_specfun:specfun.f
            integer intent(in),check(nt>0) :: nt
            integer optional,intent(in) :: kf=1
            double precision intent(out),depend(nt),dimension(nt) :: xa
            double precision intent(out),depend(nt),dimension(nt) :: xb
            double precision intent(out),depend(nt),dimension(nt) :: xc
            double precision intent(out),depend(nt),dimension(nt) :: xd
        end subroutine airyzo
        subroutine eulerb(n,en) ! in :_specfun:specfun.
            integer intent(in), check(n>=2) :: n
            double precision intent(out),depend(n),dimension(n+1) :: en
        end subroutine eulerb
        subroutine lqnb(n,x,qn,qd) ! in :_specfun:specfun.f
            integer intent(in), check(n>=1) :: n
            double precision intent(in) :: x
            double precision intent(out),depend(n),dimension(n+1) :: qn
            double precision intent(out),depend(n),dimension(n+1) :: qd
        end subroutine lqnb
        subroutine lamv(v,x,vm,vl,dl) ! in :_specfun:specfun.f
            double precision intent(in), check(v>=1) :: v
            double precision intent(in) :: x
            double precision intent(out) :: vm
            double precision intent(out),depend(v),dimension((int)v+1) :: vl
            double precision intent(out),depend(v),dimension((int)v+1) :: dl
        end subroutine lamv
        subroutine pbdv(v,x,dv,dp,pdf,pdd) ! in :_specfun:specfun.f
            double precision intent(in),check((abs((int)v)+2)>=2) :: v
            double precision intent(in) :: x
            double precision intent(out),depend(v),dimension(abs((int)v)+2) :: dv
            double precision intent(out),depend(v),dimension(abs((int)v)+2) :: dp
            double precision intent(out) :: pdf
            double precision intent(out) :: pdd
        end subroutine pbdv
        subroutine cerzo(nt,zo) ! in :_specfun:specfun.f
            integer intent(in), check(nt>0) :: nt
            complex*16 intent(out), depend(nt), dimension(nt) :: zo
        end subroutine cerzo
        subroutine lamn(n,x,nm,bl,dl) ! in :_specfun:specfun.f
            integer intent(in), check(n>=1) :: n
            double precision intent(in) :: x
            integer intent(out) :: nm
            double precision intent(out),depend(n),dimension(n+1) :: bl
            double precision intent(out),depend(n),dimension(n+1) :: dl
        end subroutine lamn
        subroutine clpn(n,z,cpn,cpd) ! in :_specfun:specfun.f
            callstatement (*f2py_func)(&n,&(z.r),&(z.i),cpn,cpd)
            callprotoargument int*,double*,double*,complex_double*,complex_double*
            integer intent(in), check(n>=1) :: n
            complex*16 intent(in) :: z
            complex*16 intent(out),depend(n),dimension(n+1) :: cpn
            complex*16 intent(out),depend(n),dimension(n+1) :: cpd
        end subroutine clpn
        subroutine lpmn(mm,m,n,x,pm,pd) ! in :_specfun:specfun.f
            integer intent(hide) :: mm=m
            integer intent(in), depend(n), check((m>=0) && (m<=n)) :: m
            integer intent(in), check((n>=0)) :: n
            double precision intent(in) :: x
            double precision intent(out),depend(m,n),dimension(m+1,n+1) :: pm
            double precision intent(out),dimension(m+1,n+1),depend(m,n) :: pd
        end subroutine lpmn
        subroutine fcszo(kf,nt,zo) ! in :_specfun:specfun.f
            integer intent(in), check((kf==1)||(kf==2)) :: kf
            integer intent(in), check(nt>0) :: nt
            complex*16 intent(out), depend(nt), dimension(nt) :: zo
        end subroutine fcszo
        subroutine cpbdn(n,z,cpb,cpd) ! in :_specfun:specfun.f
            integer intent(in), check((abs(n)) >= 1) :: n
            complex*16 intent(in) :: z
            complex*16 depend(n), intent(out), dimension(abs(n)+2) :: cpb
            complex*16 depend(n), intent(out), dimension(abs(n)+2) :: cpd
        end subroutine cpbdn
        subroutine lpn(n,x,pn,pd) ! in :_specfun:specfun.f
            integer intent(in), check(n>=1) :: n
            double precision intent(in) :: x
            double precision intent(out),dimension(n+1),depend(n) :: pn
            double precision intent(out),dimension(n+1),depend(n) :: pd
        end subroutine lpn
        subroutine fcoef(kd,m,q,a,fc) ! in :_specfun:specfun.f
            integer intent(in), check((kd>0) && (kd<5)) :: kd
            integer intent(in) :: m
            double precision intent(in), check(q>=0) :: q
            double precision intent(in) :: a
            double precision intent(out),dimension(251) :: fc
        end subroutine fcoef
        subroutine rcty(n,x,nm,ry,dy) ! in :_specfun:specfun.f
            integer intent(in), check(n>0) :: n
            double precision intent(in) :: x
            integer intent(out) :: nm
            double precision intent(out),dimension(n+1),depend(n) :: ry
            double precision intent(out),dimension(n+1),depend(n) :: dy
        end subroutine rcty
        subroutine cyzo(nt,kf,kc,zo,zv) ! in :_specfun:specfun.f
            integer intent(in), check(nt>0) :: nt
            integer intent(in), check((kf>=0)&&(kf<=2)) :: kf
            integer intent(in), check((kc==0)||(kc==1)) :: kc
            complex*16 intent(out),depend(nt),dimension(nt) :: zo
            complex*16 intent(out),dimension(nt),depend(nt) :: zv
        end subroutine cyzo
        subroutine klvnzo(nt,kd,zo) ! in :_specfun:specfun.f
            integer intent(in), check(nt>0) :: nt
            integer intent(in), check((kd>=1)&&(kd<=8)) :: kd
            double precision intent(out), depend(nt), dimension(nt) :: zo
        end subroutine klvnzo
        subroutine jyzo(n,nt,rj0,rj1,ry0,ry1) ! in :_specfun:specfun.f
            integer intent(in), check(n>=0) :: n
            integer intent(in), check(nt>0) :: nt
            double precision intent(out),dimension(nt),depend(nt) :: rj0
            double precision intent(out),dimension(nt),depend(nt) :: rj1
            double precision intent(out),dimension(nt),depend(nt) :: ry0
            double precision intent(out),dimension(nt),depend(nt) :: ry1
        end subroutine jyzo
        subroutine rctj(n,x,nm,rj,dj) ! in :_specfun:specfun.f
            integer intent(in), check(n>0) :: n
            double precision intent(in) :: x
            integer intent(out) :: nm
            double precision intent(out),dimension(n+1),depend(n) :: rj
            double precision intent(out),dimension(n+1),depend(n) :: dj
        end subroutine rctj
        subroutine segv(m,n,c,kd,cv,eg) ! in :_specfun:specfun.f
            integer intent(in) :: m
            integer intent(in),depend(m),check((n>=m) && ((n-m)<199)) :: n
            double precision intent(in) :: c
            integer intent(in), check((kd==-1) || (kd==1)) :: kd
            double precision intent(out) :: cv
            double precision intent(out),dimension(n-m+2) :: eg
        end subroutine segv
    end interface
end python module _specfun
