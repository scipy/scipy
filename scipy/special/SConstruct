# Last Change: Sat Nov 24 08:00 PM 2007 J
# vim:syntax=python
from os.path import join as pjoin
import glob
import sys
from distutils.sysconfig import get_python_inc

from numpy.distutils.misc_util import get_numpy_include_dirs
from numpy.distutils.scons import GetNumpyEnvironment

env = GetNumpyEnvironment(ARGUMENTS)

env.AppendUnique(CPPPATH = [get_python_inc(), get_numpy_include_dirs()])
env.AppendUnique(CPPPATH = env['F2PYINCLUDEDIR'])

if sys.platform=='win32':
#        define_macros.append(('NOINFINITIES',None))
#        define_macros.append(('NONANS',None))
    env.AppendUnique(CPPDEFINES = '_USE_MATH_DEFINES')

def build_lib(name, ext):
    """ext should be .f or .c"""
    src = glob.glob(pjoin(name, '*%s' % ext))
    env.NumpyStaticExtLibrary(name, source = src)

# C libraries
build_lib('c_misc', '.c')
build_lib('cephes', '.c')

# F libraries
build_lib('mach', '.f')
build_lib('toms', '.f')
build_lib('amos', '.f')
build_lib('cdf', '.f')
build_lib('specfun', '.f')

env.AppendUnique(LIBPATH = env['build_dir'])

# Cephes extension
src = ['_cephesmodule.c', 'amos_wrappers.c', 'specfun_wrappers.c', \
       'toms_wrappers.c','cdf_wrappers.c','ufunc_extras.c']

env.NumpyPythonExtension('_cephes', 
                         source = src, 
                         LIBS = ['amos', 'toms', 'c_misc', 'cephes', 'mach',\
                                 'cdf', 'specfun'])

# Specfun extension
env.NumpyPythonExtension('specfun', source = 'specfun.pyf', LIBS = 'specfun', \
                         F2PYOPTIONS = ["--no-wrap-functions"])
