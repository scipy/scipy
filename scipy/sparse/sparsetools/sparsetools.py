# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.32
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _sparsetools
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types




def extract_csr_diagonal(*args):
    """
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          std::vector<(signed char)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          std::vector<(unsigned char)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, short Ax, std::vector<(short)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, int Ax, std::vector<(int)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, long long Ax,
          std::vector<(long long)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, float Ax, std::vector<(float)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, double Ax, std::vector<(double)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          std::vector<(npy_cfloat_wrapper)> Yx)
      extract_csr_diagonal(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          std::vector<(npy_cdouble_wrapper)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, std::vector<(signed char)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, std::vector<(unsigned char)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, std::vector<(short)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, std::vector<(int)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, std::vector<(long long)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, std::vector<(float)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, std::vector<(double)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, std::vector<(npy_cfloat_wrapper)> Yx)
      extract_csr_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, std::vector<(npy_cdouble_wrapper)> Yx)
      """
    return _sparsetools.extract_csr_diagonal(*args)

def extract_csc_diagonal(*args):
    """
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          std::vector<(signed char)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          std::vector<(unsigned char)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, short Ax, std::vector<(short)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, int Ax, std::vector<(int)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, long long Ax,
          std::vector<(long long)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, float Ax, std::vector<(float)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, double Ax, std::vector<(double)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          std::vector<(npy_cfloat_wrapper)> Yx)
      extract_csc_diagonal(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          std::vector<(npy_cdouble_wrapper)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, std::vector<(signed char)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, std::vector<(unsigned char)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, std::vector<(short)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, std::vector<(int)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, std::vector<(long long)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, std::vector<(float)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, std::vector<(double)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, std::vector<(npy_cfloat_wrapper)> Yx)
      extract_csc_diagonal(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, std::vector<(npy_cdouble_wrapper)> Yx)
      """
    return _sparsetools.extract_csc_diagonal(*args)

def csrtocsc(*args):
    """
      csrtocsc(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(signed char)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(unsigned char)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, short Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bi, std::vector<(short)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, int Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bi, std::vector<(int)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, long long Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(long long)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, float Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bi, std::vector<(float)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, double Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bi, std::vector<(double)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csrtocsc(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(npy_cdouble_wrapper)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi, std::vector<(signed char)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi, std::vector<(unsigned char)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi, std::vector<(short)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi, std::vector<(int)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi, std::vector<(long long)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi, std::vector<(float)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi, std::vector<(double)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csrtocsc(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(npy_cdouble_wrapper)> Bx)
      """
    return _sparsetools.csrtocsc(*args)

def csctocsr(*args):
    """
      csctocsr(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(signed char)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(unsigned char)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, short Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(short)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, int Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(int)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, long long Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(long long)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, float Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(float)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, double Ax, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(double)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csctocsr(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj, std::vector<(signed char)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj, std::vector<(unsigned char)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj, std::vector<(short)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj, std::vector<(int)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj, std::vector<(long long)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj, std::vector<(float)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj, std::vector<(double)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csctocsr(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      """
    return _sparsetools.csctocsr(*args)

def csrtocoo(*args):
    """
      csrtocoo(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(signed char)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(unsigned char)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, short Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(short)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, int Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(int)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, long long Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(long long)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, float Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(float)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, double Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(double)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csrtocoo(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(signed char)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(unsigned char)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(short)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(int)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(long long)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(float)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(double)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csrtocoo(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      """
    return _sparsetools.csrtocoo(*args)

def csctocoo(*args):
    """
      csctocoo(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(signed char)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(unsigned char)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, short Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(short)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, int Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(int)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, long long Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(long long)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, float Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(float)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, double Ax, std::vector<(int)> Bi,
          std::vector<(int)> Bj, std::vector<(double)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csctocoo(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          std::vector<(int)> Bi, std::vector<(int)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(signed char)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(unsigned char)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(short)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(int)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(long long)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(float)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj, std::vector<(double)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      csctocoo(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, std::vector<(long long)> Bi,
          std::vector<(long long)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      """
    return _sparsetools.csctocoo(*args)

def cootocsr(*args):
    """
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, signed char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(signed char)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, unsigned char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(unsigned char)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, short Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(short)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, int Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(int)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, long long Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(long long)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, float Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(float)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, double Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(double)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, npy_cfloat_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      cootocsr(int n_row, int n_col, int NNZ, int Ai, int Aj, npy_cdouble_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, signed char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(signed char)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, unsigned char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(unsigned char)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, short Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(short)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, int Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(int)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, long long Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(long long)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, float Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(float)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, double Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(double)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, npy_cfloat_wrapper Ax,
          std::vector<(long long)> Bp, std::vector<(long long)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      cootocsr(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, npy_cdouble_wrapper Ax,
          std::vector<(long long)> Bp, std::vector<(long long)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      """
    return _sparsetools.cootocsr(*args)

def cootocsc(*args):
    """
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, signed char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(signed char)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, unsigned char Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(unsigned char)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, short Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(short)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, int Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(int)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, long long Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(long long)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, float Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(float)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, double Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(double)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, npy_cfloat_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(npy_cfloat_wrapper)> Bx)
      cootocsc(int n_row, int n_col, int NNZ, int Ai, int Aj, npy_cdouble_wrapper Ax,
          std::vector<(int)> Bp, std::vector<(int)> Bi,
          std::vector<(npy_cdouble_wrapper)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, signed char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(signed char)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, unsigned char Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(unsigned char)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, short Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(short)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, int Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(int)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, long long Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(long long)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, float Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(float)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, double Ax, std::vector<(long long)> Bp,
          std::vector<(long long)> Bi,
          std::vector<(double)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, npy_cfloat_wrapper Ax,
          std::vector<(long long)> Bp, std::vector<(long long)> Bi,
          std::vector<(npy_cfloat_wrapper)> Bx)
      cootocsc(long long n_row, long long n_col, long long NNZ, long long Ai,
          long long Aj, npy_cdouble_wrapper Ax,
          std::vector<(long long)> Bp, std::vector<(long long)> Bi,
          std::vector<(npy_cdouble_wrapper)> Bx)
      """
    return _sparsetools.cootocsc(*args)

def csrmucsr(*args):
    """
      csrmucsr(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          int Bp, int Bj, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(signed char)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          int Bp, int Bj, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(unsigned char)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, short Ax, int Bp,
          int Bj, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(short)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, int Ax, int Bp,
          int Bj, int Bx, std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(int)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, long long Ax,
          int Bp, int Bj, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(long long)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, float Ax, int Bp,
          int Bj, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(float)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, double Ax, int Bp,
          int Bj, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(double)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          int Bp, int Bj, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csrmucsr(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          int Bp, int Bj, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, long long Bp, long long Bj,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(signed char)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, long long Bp, long long Bj,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(unsigned char)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, long long Bp, long long Bj,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(short)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, long long Bp, long long Bj,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(int)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long Bp, long long Bj,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(long long)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, long long Bp, long long Bj,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(float)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, long long Bp, long long Bj,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(double)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bj, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csrmucsr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bj, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csrmucsr(*args)

def cscmucsc(*args):
    """
      cscmucsc(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          int Bp, int Bi, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(signed char)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          int Bp, int Bi, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(unsigned char)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, short Ax, int Bp,
          int Bi, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(short)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, int Ax, int Bp,
          int Bi, int Bx, std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(int)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, long long Ax,
          int Bp, int Bi, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(long long)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, float Ax, int Bp,
          int Bi, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(float)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, double Ax, int Bp,
          int Bi, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(double)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          int Bp, int Bi, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      cscmucsc(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          int Bp, int Bi, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, long long Bp, long long Bi,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(signed char)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, long long Bp, long long Bi,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(unsigned char)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, long long Bp, long long Bi,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(short)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, long long Bp, long long Bi,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(int)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, long long Bp, long long Bi,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(long long)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, long long Bp, long long Bi,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(float)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, long long Bp, long long Bi,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(double)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bi, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      cscmucsc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bi, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.cscmucsc(*args)

def csrmux(*args):
    """
      csrmux(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          signed char Xx, std::vector<(signed char)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          unsigned char Xx, std::vector<(unsigned char)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, short Ax, short Xx,
          std::vector<(short)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, int Ax, int Xx,
          std::vector<(int)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, long long Ax,
          long long Xx, std::vector<(long long)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, float Ax, float Xx,
          std::vector<(float)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, double Ax, double Xx,
          std::vector<(double)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          npy_cfloat_wrapper Xx, std::vector<(npy_cfloat_wrapper)> Yx)
      csrmux(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          npy_cdouble_wrapper Xx, std::vector<(npy_cdouble_wrapper)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, signed char Xx, std::vector<(signed char)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, unsigned char Xx,
          std::vector<(unsigned char)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, short Xx, std::vector<(short)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, int Xx, std::vector<(int)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long Xx, std::vector<(long long)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, float Xx, std::vector<(float)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, double Xx, std::vector<(double)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, npy_cfloat_wrapper Xx,
          std::vector<(npy_cfloat_wrapper)> Yx)
      csrmux(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, npy_cdouble_wrapper Xx,
          std::vector<(npy_cdouble_wrapper)> Yx)
      """
    return _sparsetools.csrmux(*args)

def cscmux(*args):
    """
      cscmux(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          signed char Xx, std::vector<(signed char)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          unsigned char Xx, std::vector<(unsigned char)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, short Ax, short Xx,
          std::vector<(short)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, int Ax, int Xx,
          std::vector<(int)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, long long Ax,
          long long Xx, std::vector<(long long)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, float Ax, float Xx,
          std::vector<(float)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, double Ax, double Xx,
          std::vector<(double)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          npy_cfloat_wrapper Xx, std::vector<(npy_cfloat_wrapper)> Yx)
      cscmux(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          npy_cdouble_wrapper Xx, std::vector<(npy_cdouble_wrapper)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, signed char Xx, std::vector<(signed char)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, unsigned char Xx,
          std::vector<(unsigned char)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, short Xx, std::vector<(short)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, int Xx, std::vector<(int)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, long long Xx, std::vector<(long long)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, float Xx, std::vector<(float)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, double Xx, std::vector<(double)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, npy_cfloat_wrapper Xx,
          std::vector<(npy_cfloat_wrapper)> Yx)
      cscmux(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, npy_cdouble_wrapper Xx,
          std::vector<(npy_cdouble_wrapper)> Yx)
      """
    return _sparsetools.cscmux(*args)

def csr_elmul_csr(*args):
    """
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          int Bp, int Bj, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(signed char)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          int Bp, int Bj, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(unsigned char)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, short Ax, int Bp,
          int Bj, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(short)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, int Ax, int Bp,
          int Bj, int Bx, std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(int)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, long long Ax,
          int Bp, int Bj, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(long long)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, float Ax, int Bp,
          int Bj, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(float)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, double Ax, int Bp,
          int Bj, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(double)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          int Bp, int Bj, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_elmul_csr(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          int Bp, int Bj, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, long long Bp, long long Bj,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(signed char)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, long long Bp, long long Bj,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(unsigned char)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, long long Bp, long long Bj,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(short)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, long long Bp, long long Bj,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(int)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long Bp, long long Bj,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(long long)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, long long Bp, long long Bj,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(float)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, long long Bp, long long Bj,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(double)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bj, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_elmul_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bj, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csr_elmul_csr(*args)

def csr_eldiv_csr(*args):
    """
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          int Bp, int Bj, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(signed char)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          int Bp, int Bj, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(unsigned char)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, short Ax, int Bp,
          int Bj, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(short)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, int Ax, int Bp,
          int Bj, int Bx, std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(int)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, long long Ax,
          int Bp, int Bj, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(long long)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, float Ax, int Bp,
          int Bj, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(float)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, double Ax, int Bp,
          int Bj, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(double)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          int Bp, int Bj, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_eldiv_csr(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          int Bp, int Bj, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, long long Bp, long long Bj,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(signed char)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, long long Bp, long long Bj,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(unsigned char)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, long long Bp, long long Bj,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(short)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, long long Bp, long long Bj,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(int)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long Bp, long long Bj,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(long long)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, long long Bp, long long Bj,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(float)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, long long Bp, long long Bj,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(double)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bj, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_eldiv_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bj, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csr_eldiv_csr(*args)

def csr_plus_csr(*args):
    """
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          int Bp, int Bj, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(signed char)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          int Bp, int Bj, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(unsigned char)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, short Ax, int Bp,
          int Bj, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(short)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, int Ax, int Bp,
          int Bj, int Bx, std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(int)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, long long Ax,
          int Bp, int Bj, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(long long)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, float Ax, int Bp,
          int Bj, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(float)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, double Ax, int Bp,
          int Bj, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(double)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          int Bp, int Bj, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_plus_csr(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          int Bp, int Bj, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, long long Bp, long long Bj,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(signed char)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, long long Bp, long long Bj,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(unsigned char)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, long long Bp, long long Bj,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(short)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, long long Bp, long long Bj,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(int)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long Bp, long long Bj,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(long long)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, long long Bp, long long Bj,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(float)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, long long Bp, long long Bj,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(double)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bj, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_plus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bj, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csr_plus_csr(*args)

def csr_minus_csr(*args):
    """
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          int Bp, int Bj, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(signed char)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          int Bp, int Bj, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(unsigned char)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, short Ax, int Bp,
          int Bj, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(short)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, int Ax, int Bp,
          int Bj, int Bx, std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(int)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, long long Ax,
          int Bp, int Bj, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(long long)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, float Ax, int Bp,
          int Bj, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(float)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, double Ax, int Bp,
          int Bj, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Cj, std::vector<(double)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          int Bp, int Bj, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_minus_csr(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          int Bp, int Bj, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, long long Bp, long long Bj,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(signed char)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, long long Bp, long long Bj,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(unsigned char)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, long long Bp, long long Bj,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(short)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, long long Bp, long long Bj,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(int)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long Bp, long long Bj,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(long long)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, long long Bp, long long Bj,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Cj,
          std::vector<(float)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, long long Bp, long long Bj,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj, std::vector<(double)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bj, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csr_minus_csr(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bj, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Cj,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csr_minus_csr(*args)

def csc_elmul_csc(*args):
    """
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          int Bp, int Bi, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(signed char)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          int Bp, int Bi, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(unsigned char)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, short Ax, int Bp,
          int Bi, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(short)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, int Ax, int Bp,
          int Bi, int Bx, std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(int)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, long long Ax,
          int Bp, int Bi, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(long long)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, float Ax, int Bp,
          int Bi, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(float)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, double Ax, int Bp,
          int Bi, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(double)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          int Bp, int Bi, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_elmul_csc(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          int Bp, int Bi, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, long long Bp, long long Bi,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(signed char)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, long long Bp, long long Bi,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(unsigned char)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, long long Bp, long long Bi,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(short)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, long long Bp, long long Bi,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(int)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, long long Bp, long long Bi,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(long long)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, long long Bp, long long Bi,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(float)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, long long Bp, long long Bi,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(double)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bi, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_elmul_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bi, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csc_elmul_csc(*args)

def csc_eldiv_csc(*args):
    """
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          int Bp, int Bi, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(signed char)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          int Bp, int Bi, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(unsigned char)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, short Ax, int Bp,
          int Bi, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(short)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, int Ax, int Bp,
          int Bi, int Bx, std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(int)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, long long Ax,
          int Bp, int Bi, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(long long)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, float Ax, int Bp,
          int Bi, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(float)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, double Ax, int Bp,
          int Bi, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(double)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          int Bp, int Bi, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_eldiv_csc(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          int Bp, int Bi, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, long long Bp, long long Bi,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(signed char)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, long long Bp, long long Bi,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(unsigned char)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, long long Bp, long long Bi,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(short)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, long long Bp, long long Bi,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(int)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, long long Bp, long long Bi,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(long long)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, long long Bp, long long Bi,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(float)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, long long Bp, long long Bi,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(double)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bi, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_eldiv_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bi, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csc_eldiv_csc(*args)

def csc_plus_csc(*args):
    """
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          int Bp, int Bi, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(signed char)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          int Bp, int Bi, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(unsigned char)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, short Ax, int Bp,
          int Bi, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(short)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, int Ax, int Bp,
          int Bi, int Bx, std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(int)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, long long Ax,
          int Bp, int Bi, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(long long)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, float Ax, int Bp,
          int Bi, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(float)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, double Ax, int Bp,
          int Bi, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(double)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          int Bp, int Bi, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_plus_csc(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          int Bp, int Bi, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, long long Bp, long long Bi,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(signed char)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, long long Bp, long long Bi,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(unsigned char)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, long long Bp, long long Bi,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(short)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, long long Bp, long long Bi,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(int)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, long long Bp, long long Bi,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(long long)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, long long Bp, long long Bi,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(float)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, long long Bp, long long Bi,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(double)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bi, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_plus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bi, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csc_plus_csc(*args)

def csc_minus_csc(*args):
    """
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, signed char Ax,
          int Bp, int Bi, signed char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(signed char)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, unsigned char Ax,
          int Bp, int Bi, unsigned char Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(unsigned char)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, short Ax, int Bp,
          int Bi, short Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(short)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, int Ax, int Bp,
          int Bi, int Bx, std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(int)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, long long Ax,
          int Bp, int Bi, long long Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(long long)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, float Ax, int Bp,
          int Bi, float Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(float)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, double Ax, int Bp,
          int Bi, double Bx, std::vector<(int)> Cp,
          std::vector<(int)> Ci, std::vector<(double)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax,
          int Bp, int Bi, npy_cfloat_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_minus_csc(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax,
          int Bp, int Bi, npy_cdouble_wrapper Bx,
          std::vector<(int)> Cp, std::vector<(int)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax, long long Bp, long long Bi,
          signed char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(signed char)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax, long long Bp, long long Bi,
          unsigned char Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(unsigned char)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax, long long Bp, long long Bi,
          short Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(short)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax, long long Bp, long long Bi,
          int Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(int)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax, long long Bp, long long Bi,
          long long Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(long long)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax, long long Bp, long long Bi,
          float Bx, std::vector<(long long)> Cp, std::vector<(long long)> Ci,
          std::vector<(float)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax, long long Bp, long long Bi,
          double Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci, std::vector<(double)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax, long long Bp,
          long long Bi, npy_cfloat_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cfloat_wrapper)> Cx)
      csc_minus_csc(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax, long long Bp,
          long long Bi, npy_cdouble_wrapper Bx, std::vector<(long long)> Cp,
          std::vector<(long long)> Ci,
          std::vector<(npy_cdouble_wrapper)> Cx)
      """
    return _sparsetools.csc_minus_csc(*args)

def spdiags(*args):
    """
      spdiags(int n_row, int n_col, int n_diag, int offsets, signed char diags,
          std::vector<(int)> Ap, std::vector<(int)> Ai,
          std::vector<(signed char)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, unsigned char diags,
          std::vector<(int)> Ap, std::vector<(int)> Ai,
          std::vector<(unsigned char)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, short diags,
          std::vector<(int)> Ap, std::vector<(int)> Ai,
          std::vector<(short)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, int diags,
          std::vector<(int)> Ap, std::vector<(int)> Ai,
          std::vector<(int)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, long long diags,
          std::vector<(int)> Ap, std::vector<(int)> Ai,
          std::vector<(long long)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, float diags,
          std::vector<(int)> Ap, std::vector<(int)> Ai,
          std::vector<(float)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, double diags,
          std::vector<(int)> Ap, std::vector<(int)> Ai,
          std::vector<(double)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, npy_cfloat_wrapper diags,
          std::vector<(int)> Ap,
          std::vector<(int)> Ai, std::vector<(npy_cfloat_wrapper)> Ax)
      spdiags(int n_row, int n_col, int n_diag, int offsets, npy_cdouble_wrapper diags,
          std::vector<(int)> Ap,
          std::vector<(int)> Ai, std::vector<(npy_cdouble_wrapper)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, signed char diags, std::vector<(long long)> Ap,
          std::vector<(long long)> Ai,
          std::vector<(signed char)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, unsigned char diags, std::vector<(long long)> Ap,
          std::vector<(long long)> Ai,
          std::vector<(unsigned char)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, short diags, std::vector<(long long)> Ap,
          std::vector<(long long)> Ai,
          std::vector<(short)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, int diags, std::vector<(long long)> Ap,
          std::vector<(long long)> Ai, std::vector<(int)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, long long diags, std::vector<(long long)> Ap,
          std::vector<(long long)> Ai,
          std::vector<(long long)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, float diags, std::vector<(long long)> Ap,
          std::vector<(long long)> Ai,
          std::vector<(float)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, double diags, std::vector<(long long)> Ap,
          std::vector<(long long)> Ai,
          std::vector<(double)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, npy_cfloat_wrapper diags,
          std::vector<(long long)> Ap, std::vector<(long long)> Ai,
          std::vector<(npy_cfloat_wrapper)> Ax)
      spdiags(long long n_row, long long n_col, long long n_diag,
          long long offsets, npy_cdouble_wrapper diags,
          std::vector<(long long)> Ap, std::vector<(long long)> Ai,
          std::vector<(npy_cdouble_wrapper)> Ax)
      """
    return _sparsetools.spdiags(*args)

def csrtodense(*args):
    """
      csrtodense(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          signed char Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          unsigned char Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, short Ax, short Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, int Ax, int Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, long long Ax,
          long long Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, float Ax, float Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, double Ax, double Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          npy_cfloat_wrapper Mx)
      csrtodense(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          npy_cdouble_wrapper Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, signed char Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, unsigned char Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, short Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, int Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, float Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, double Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, npy_cfloat_wrapper Mx)
      csrtodense(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, npy_cdouble_wrapper Mx)
      """
    return _sparsetools.csrtodense(*args)

def densetocsr(*args):
    """
      densetocsr(int n_row, int n_col, signed char Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(signed char)> Ax)
      densetocsr(int n_row, int n_col, unsigned char Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(unsigned char)> Ax)
      densetocsr(int n_row, int n_col, short Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(short)> Ax)
      densetocsr(int n_row, int n_col, int Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(int)> Ax)
      densetocsr(int n_row, int n_col, long long Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(long long)> Ax)
      densetocsr(int n_row, int n_col, float Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(float)> Ax)
      densetocsr(int n_row, int n_col, double Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(double)> Ax)
      densetocsr(int n_row, int n_col, npy_cfloat_wrapper Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(npy_cfloat_wrapper)> Ax)
      densetocsr(int n_row, int n_col, npy_cdouble_wrapper Mx, std::vector<(int)> Ap,
          std::vector<(int)> Aj, std::vector<(npy_cdouble_wrapper)> Ax)
      densetocsr(long long n_row, long long n_col, signed char Mx, std::vector<(long long)> Ap,
          std::vector<(long long)> Aj,
          std::vector<(signed char)> Ax)
      densetocsr(long long n_row, long long n_col, unsigned char Mx,
          std::vector<(long long)> Ap, std::vector<(long long)> Aj,
          std::vector<(unsigned char)> Ax)
      densetocsr(long long n_row, long long n_col, short Mx, std::vector<(long long)> Ap,
          std::vector<(long long)> Aj,
          std::vector<(short)> Ax)
      densetocsr(long long n_row, long long n_col, int Mx, std::vector<(long long)> Ap,
          std::vector<(long long)> Aj,
          std::vector<(int)> Ax)
      densetocsr(long long n_row, long long n_col, long long Mx, std::vector<(long long)> Ap,
          std::vector<(long long)> Aj,
          std::vector<(long long)> Ax)
      densetocsr(long long n_row, long long n_col, float Mx, std::vector<(long long)> Ap,
          std::vector<(long long)> Aj,
          std::vector<(float)> Ax)
      densetocsr(long long n_row, long long n_col, double Mx, std::vector<(long long)> Ap,
          std::vector<(long long)> Aj,
          std::vector<(double)> Ax)
      densetocsr(long long n_row, long long n_col, npy_cfloat_wrapper Mx,
          std::vector<(long long)> Ap, std::vector<(long long)> Aj,
          std::vector<(npy_cfloat_wrapper)> Ax)
      densetocsr(long long n_row, long long n_col, npy_cdouble_wrapper Mx,
          std::vector<(long long)> Ap, std::vector<(long long)> Aj,
          std::vector<(npy_cdouble_wrapper)> Ax)
      """
    return _sparsetools.densetocsr(*args)

def sort_csr_indices(*args):
    """
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, signed char Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, unsigned char Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, short Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, int Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, long long Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, float Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, double Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax)
      sort_csr_indices(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax)
      sort_csr_indices(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax)
      """
    return _sparsetools.sort_csr_indices(*args)

def sort_csc_indices(*args):
    """
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, signed char Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, unsigned char Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, short Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, int Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, long long Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, float Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, double Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax)
      sort_csc_indices(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax)
      sort_csc_indices(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax)
      """
    return _sparsetools.sort_csc_indices(*args)

def sum_csr_duplicates(*args):
    """
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, signed char Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, unsigned char Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, short Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, int Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, long long Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, float Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, double Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax)
      sum_csr_duplicates(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax)
      sum_csr_duplicates(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax)
      """
    return _sparsetools.sum_csr_duplicates(*args)

def sum_csc_duplicates(*args):
    """
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, signed char Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, unsigned char Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, short Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, int Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, long long Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, float Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, double Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, npy_cfloat_wrapper Ax)
      sum_csc_duplicates(int n_row, int n_col, int Ap, int Ai, npy_cdouble_wrapper Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          signed char Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          unsigned char Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          short Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          int Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          long long Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          float Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          double Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cfloat_wrapper Ax)
      sum_csc_duplicates(long long n_row, long long n_col, long long Ap, long long Ai,
          npy_cdouble_wrapper Ax)
      """
    return _sparsetools.sum_csc_duplicates(*args)

def get_csr_submatrix(*args):
    """
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, signed char Ax,
          int ir0, int ir1, int ic0, int ic1, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(signed char)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, unsigned char Ax,
          int ir0, int ir1, int ic0, int ic1, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(unsigned char)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, short Ax, int ir0,
          int ir1, int ic0, int ic1, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(short)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, int Ax, int ir0,
          int ir1, int ic0, int ic1, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(int)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, long long Ax,
          int ir0, int ir1, int ic0, int ic1, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(long long)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, float Ax, int ir0,
          int ir1, int ic0, int ic1, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(float)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, double Ax, int ir0,
          int ir1, int ic0, int ic1, std::vector<(int)> Bp,
          std::vector<(int)> Bj, std::vector<(double)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, npy_cfloat_wrapper Ax,
          int ir0, int ir1, int ic0, int ic1,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      get_csr_submatrix(int n_row, int n_col, int Ap, int Aj, npy_cdouble_wrapper Ax,
          int ir0, int ir1, int ic0, int ic1,
          std::vector<(int)> Bp, std::vector<(int)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          signed char Ax, long long ir0, long long ir1,
          long long ic0, long long ic1, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(signed char)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          unsigned char Ax, long long ir0, long long ir1,
          long long ic0, long long ic1, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(unsigned char)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          short Ax, long long ir0, long long ir1,
          long long ic0, long long ic1, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(short)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          int Ax, long long ir0, long long ir1,
          long long ic0, long long ic1, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(int)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          long long Ax, long long ir0, long long ir1,
          long long ic0, long long ic1, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(long long)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          float Ax, long long ir0, long long ir1,
          long long ic0, long long ic1, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(float)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          double Ax, long long ir0, long long ir1,
          long long ic0, long long ic1, std::vector<(long long)> Bp,
          std::vector<(long long)> Bj,
          std::vector<(double)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cfloat_wrapper Ax, long long ir0,
          long long ir1, long long ic0, long long ic1,
          std::vector<(long long)> Bp, std::vector<(long long)> Bj,
          std::vector<(npy_cfloat_wrapper)> Bx)
      get_csr_submatrix(long long n_row, long long n_col, long long Ap, long long Aj,
          npy_cdouble_wrapper Ax, long long ir0,
          long long ir1, long long ic0, long long ic1,
          std::vector<(long long)> Bp, std::vector<(long long)> Bj,
          std::vector<(npy_cdouble_wrapper)> Bx)
      """
    return _sparsetools.get_csr_submatrix(*args)
