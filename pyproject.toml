# Note that in maintenance branches, all build dependencies should
# have an upper bound equal to the most recent already-released version
# of the dependency. This to prevent that a future backwards-incompatible
# release will break the source build of a SciPy release.
# Do accept micro (bug-fix) releases. So for example, if pybind11 2.4.3 is
# the most recent version on PyPI:
#
#     "pybind11>=2.4.3,<2.5.0",

[build-system]
build-backend = 'mesonpy'
requires = [
    "meson-python>=0.5.0,<0.7.0",
    "Cython>=0.29.21,<3.0",
    "pybind11>=2.4.3,<2.10.0",
    "pythran>=0.9.12,<0.12.0",
    # `wheel` is needed for non-isolated builds, given that `meson-python`
    # doesn't list it as a runtime requirement (at least in 0.5.0)
    "wheel<0.38.0",

    # NumPy dependencies - to update these, sync from
    # https://github.com/scipy/oldest-supported-numpy/, and then
    # update minimum version to match our install_requires min version
    # ----------------------------------------------------------------

    # numpy 1.19 was the first minor release to provide aarch64 wheels, but
    # wheels require fixes contained in numpy 1.19.2
    "numpy==1.19.2; python_version=='3.8' and platform_machine=='aarch64' and platform_python_implementation != 'PyPy'",
    # aarch64 for py39 is covered by default requirement below

    # arm64 on Darwin supports Python 3.8 and above requires numpy>=1.20.0
    "numpy==1.20.0; python_version=='3.8' and platform_machine=='arm64' and platform_system=='Darwin'",
    "numpy==1.20.0; python_version=='3.9' and platform_machine=='arm64' and platform_system=='Darwin'",

    # loongarch64 requires numpy>=1.22.0
    "numpy==1.22.0; platform_machine=='loongarch64'",

    # default numpy requirements
    "numpy==1.18.5; python_version=='3.8' and (platform_machine!='arm64' or platform_system!='Darwin') and platform_machine!='aarch64' and platform_machine!='loongarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.19.3; python_version=='3.9' and (platform_machine!='arm64' or platform_system!='Darwin') and platform_machine!='loongarch64' and platform_python_implementation != 'PyPy'",
    # Note that 1.21.3 was the first version with a complete set of 3.10 wheels,
    # however macOS was broken and it's safe to build against 1.21.6 on all platforms
    # (see oldest-supported-numpy issues gh-28 and gh-45)
    "numpy==1.21.6; python_version=='3.10' and platform_machine!='loongarch64' and platform_python_implementation != 'PyPy'",

    # For Python versions which aren't yet officially supported,
    # we specify an unpinned NumPy which allows source distributions
    # to be used and allows wheels to be used as soon as they
    # become available.
    "numpy; python_version>='3.11'",
    "numpy; python_version>='3.8' and platform_python_implementation=='PyPy'",
]

[project]
name = "SciPy"
license = {file = "LICENSE.txt"}
description = "Fundamental algorithms for scientific computing in Python"
maintainers = [
    {name = "SciPy Developers", email = "scipy-dev@python.org"},
]
# Note: Python and NumPy upper version bounds should be set correctly in
# release branches, see:
#     https://scipy.github.io/devdocs/dev/core-dev/index.html#version-ranges-for-numpy-and-other-dependencies
requires-python = ">=3.8,<3.12"
dependencies = [
    # TODO: update to "pin-compatible" once possible, see
    # https://github.com/FFY00/meson-python/issues/29
    "numpy>=1.18.5,<1.26.0",
]
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
dynamic = ['version']

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "asv",
    "mpmath",
    "gmpy2",
    "threadpoolctl",
    "scikit-umfpack",
]
doc = [
    "sphinx!=4.1.0",
    "pydata-sphinx-theme>=0.9.0",
    "sphinx-panels>=0.5.2",
    "matplotlib>2",
    "numpydoc",
    "sphinx-tabs",
]
dev = [
    "mypy",
    "typing_extensions",
    "pycodestyle",
    "flake8",
]

[project.urls]
homepage = "https://scipy.org/"
documentation = "https://docs.scipy.org/doc/scipy/"
source = "https://github.com/scipy/scipy"
download = "https://github.com/scipy/scipy/releases"
tracker = "https://github.com/scipy/scipy/issues"


[tool.doit]
dodoFile = "do.py"

