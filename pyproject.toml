# Note that in maintenance branches, all build dependencies should
# have an upper bound equal to the most recent already-released version
# of the dependency. This to prevent that a future backwards-incompatible
# release will break the source build of a SciPy release.
# Do accept micro (bug-fix) releases. So for example, if pybind11 2.4.3 is
# the most recent version on PyPI:
#
#     "pybind11>=2.4.3,<2.5.0",

[build-system]
requires = [
    "wheel",
    "setuptools",
    "Cython>=0.29.18",
    "pybind11>=2.4.3",
    "pythran",

    # NumPy dependencies - to update these, sync from
    # https://github.com/scipy/oldest-supported-numpy/, and then
    # update minimum version to match our install_requires min version
    # ----------------------------------------------------------------

    # numpy 1.19 was the first minor release to provide aarch64 wheels, but
    # wheels require fixes contained in numpy 1.19.2
    "numpy==1.19.2; python_version=='3.6' and platform_machine=='aarch64'",
    "numpy==1.19.2; python_version=='3.7' and platform_machine=='aarch64'",

    # default numpy requirements
    "numpy==1.16.5; python_version=='3.6' and platform_machine!='aarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.16.5; python_version=='3.7' and platform_machine!='aarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.17.3; python_version=='3.8' and platform_machine!='aarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.19.3; python_version=='3.9' and platform_python_implementation != 'PyPy'",

    # First PyPy versions for which there are numpy wheels
    "numpy==1.19.0; python_version=='3.6' and platform_python_implementation=='PyPy'",
    "numpy==1.20.0; python_version=='3.7' and platform_python_implementation=='PyPy'",

    # For Python versions which aren't yet officially supported,
    # we specify an unpinned NumPy which allows source distributions
    # to be used and allows wheels to be used as soon as they
    # become available.
    "numpy; python_version>='3.10'",
    "numpy; python_version>='3.8' and platform_python_implementation=='PyPy'",
]
