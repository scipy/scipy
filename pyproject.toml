# Note that in maintenance branches, all build dependencies should
# have an upper bound equal to the most recent already-released version
# of the dependency. This to prevent that a future backwards-incompatible
# release will break the source build of a SciPy release.
# Do accept micro (bug-fix) releases. So for example, if pybind11 2.4.3 is
# the most recent version on PyPI:
#
#     "pybind11>=2.4.3,<2.5.0",

[build-system]
requires = [
    "wheel",
    "setuptools",
    "Cython>=0.29.18",
    "pybind11>=2.4.3",
    "pythran",

    # NumPy dependencies - to update these, sync from
    # https://github.com/scipy/oldest-supported-numpy/, and then
    # update minimum version to match our install_requires min version
    # ----------------------------------------------------------------

    # numpy 1.19 was the first minor release to provide aarch64 wheels, but
    # wheels require fixes contained in numpy 1.19.2
    "numpy==1.19.2; python_version=='3.6' and platform_machine=='aarch64'",
    "numpy==1.19.2; python_version=='3.7' and platform_machine=='aarch64'",

    # default numpy requirements
    "numpy==1.16.5; python_version=='3.6' and platform_machine!='aarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.16.5; python_version=='3.7' and platform_machine!='aarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.17.3; python_version=='3.8' and platform_machine!='aarch64' and platform_python_implementation != 'PyPy'",
    "numpy==1.19.3; python_version=='3.9' and platform_python_implementation != 'PyPy'",

    # First PyPy versions for which there are numpy wheels
    "numpy==1.19.0; python_version=='3.6' and platform_python_implementation=='PyPy'",
    "numpy==1.20.0; python_version=='3.7' and platform_python_implementation=='PyPy'",

    # For Python versions which aren't yet officially supported,
    # we specify an unpinned NumPy which allows source distributions
    # to be used and allows wheels to be used as soon as they
    # become available.
    "numpy; python_version>='3.10'",
    "numpy; python_version>='3.8' and platform_python_implementation=='PyPy'",
]

[project]
name = "SciPy"
license = {file = "LICENSE.txt"}

maintainers = [
    {name = "SciPy Developers", email = "scipy-dev@python.org"},
]
# Note: Python and NumPy upper version bounds should be set correctly in
# release branches, see:
#     https://scipy.github.io/devdocs/dev/core-dev/index.html#version-ranges-for-numpy-and-other-dependencies
requires-python = ">=3.7"
dependencies = [
    "numpy>=1.16.5",
]
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
dynamic = ['version', 'description']

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "asv",
    "mpmath",
    "gmpy2",
    "scikit-umfpack",
]
doc = [
    "sphinx!=3.1.0",
    "pydata-sphinx-theme>=0.6.1",
    "sphinx-panels>=0.5.2",
    "matplotlib>2",
    "numpydoc==1.1.0",
]
dev = [
    "mypy",
    "typing_extensions",
    "pycodestyle",
    "flake8",
]

[project.urls]
homepage = "https://scipy.org/"
documentation = "https://docs.scipy.org/doc/scipy/reference/"
source = "https://github.com/scipy/scipy"
download = "https://github.com/scipy/scipy/releases"
tracker = "https://github.com/scipy/scipy/issues"
