# After changing this file, check it on:
#   http://lint.travis-ci.org/
language: python
sudo: false
env:
  global:
   # Wheelhouse for pre-release wheels
   - PRE_WHEELS="https://7933911d6844c6c53a7d-47bd50c35cd79bd838daf386af554a83.ssl.cf2.rackcdn.com"
matrix:
  include:
    - python: 2.7
      env:
        - PYFLAKES=1
        - PEP8=1
        - NUMPYSPEC=numpy
      before_install:
        - pip install pep8==1.7.0
        - pip install pyflakes==1.1.0
      script:
        - PYFLAKES_NODOCTEST=1 pyflakes scipy benchmarks/benchmarks | grep -E -v 'unable to detect undefined names|assigned to but never used|imported but unused|redefinition of unused|may be undefined, or defined from star imports' > test.out; cat test.out; test \! -s test.out
        - pep8 scipy benchmarks/benchmarks
    - python: 2.7
      env:
        - TESTMODE=fast
        - REFGUIDE_CHECK=1
        - COVERAGE=
        - NPY_RELAXED_STRIDES_CHECKING=1
        - NUMPYSPEC="--upgrade git+git://github.com/numpy/numpy.git@v1.10.4"
      addons:
        apt:
          packages:
            - libatlas-dev
            - libatlas-base-dev
            - liblapack-dev
            - gfortran
            - libgmp-dev
            - libmpfr-dev
            - ccache
            - libfreetype6-dev
            - libpng-dev
            - zlib1g-dev
            - texlive-fonts-recommended
    - python: 3.5
      env:
        - TESTMODE=fast
        - COVERAGE=
        - NUMPYSPEC="--pre --upgrade --timeout=60 -f $PRE_WHEELS numpy"
        - USE_WHEEL=1
    - python: 3.4
      env:
        - TESTMODE=fast
        - COVERAGE=
        - NUMPYSPEC="numpy==1.8.2"
        - USE_SDIST=1
        - OPTIMIZE=-OO
    - python: 2.7
      env:
        - TESTMODE=full
        - COVERAGE=--coverage
        - NUMPYSPEC=numpy
    - python: 3.6
      env:
        - TESTMODE=fast
        - COVERAGE=
        - NUMPYSPEC=numpy
    - os: osx
      language: generic
      env:
        - TESTMODE=fast
        - COVERAGE=
        - NUMPYSPEC=numpy
        - USE_SDIST=1
        - MB_PYTHON_VERSION=3.6
addons:
  apt:
    packages:
    - libatlas-dev
    - libatlas-base-dev
    - liblapack-dev
    - gfortran
    - libgmp-dev
    - libmpfr-dev
    - ccache
cache:
  directories:
    - $HOME/.ccache
before_install:
  # Work in our own virtualenv to isolate from travis-ci packages.
  - echo $TRAVIS_OS_NAME
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      python -m pip install --upgrade pip
      pip install --upgrade virtualenv
      virtualenv --python=python venv
      source venv/bin/activate
      free -m
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install gcc ccache
      export PATH="/usr/local/opt/ccache/libexec:$PATH"
      touch config.sh
      git clone https://github.com/matthew-brett/multibuild.git
      source multibuild/common_utils.sh
      source multibuild/travis_steps.sh
      before_install
      export CXX="ccache clang++"
      export CC="ccache clang"
      export CFLAGS="-arch x86_64"
      export CXXFLAGS="-arch x86_64"
      printenv
    fi
  - python --version # just to check
  - export PYTHONFAULTHANDLER=1
  - export PATH=/usr/lib/ccache:$PATH
  - uname -a
  - df -h
  - ulimit -a
  - mkdir builds
  - pushd builds
  # Install gmpy2 dependencies
  - mkdir -p $HOME/.local
  - wget ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.2.tar.gz
  - tar xzvf mpc-1.0.2.tar.gz
  - pushd mpc-1.0.2
  - ./configure --prefix=$HOME/.local
  - make
  - make install
  - popd
  - export CPATH=$HOME/.local/include
  - export LIBRARY_PATH=$HOME/.local/lib
  - export LD_LIBRARY_PATH=$HOME/.local/lib
  # End install gmpy2 dependencies
  # Need to install Cython 0.23.4 from source to avoid errors for Python 3.6
  - travis_retry pip install --install-option="--no-cython-compile" Cython==0.23.4
  - travis_retry pip install $NUMPYSPEC
  - travis_retry pip install nose mpmath argparse Pillow codecov
  - travis_retry pip install --upgrade pip setuptools
  - travis_retry pip install gmpy2  # speeds up mpmath (scipy.special tests)
  - if [ "${TESTMODE}" == "full" ]; then pip install coverage; fi
  - if [ "${USE_WHEEL}" == "1" ]; then pip install wheel; fi
  - |
    if [ "${REFGUIDE_CHECK}" == "1" ]; then
        travis_retry pip install matplotlib Sphinx==1.5.5
    fi
  - python -V
  - popd
  - set -o pipefail
script:
  - python -c 'import numpy as np; print("relaxed strides checking:", np.ones((10,1),order="C").flags.f_contiguous)'
  # Make sure that relaxed strides checking is actually in effect; otherwise fail loudly
  - if [ "$NPY_RELAXED_STRIDES_CHECKING" == "1" ]; then python -c'import numpy as np; assert np.ones((10,1),order="C").flags.f_contiguous'; fi
  # Test that mpmath actually uses gmpy2
  - python -c 'import mpmath.libmp; assert mpmath.libmp.BACKEND == "gmpy"'
  - |
    if [ "${USE_WHEEL}" == "1" ]; then
        # Need verbose output or TravisCI will terminate after 10 minutes
        pip wheel . -v
        pip install scipy*.whl -v
        USE_WHEEL_BUILD="--no-build"
    elif [ "${USE_SDIST}" == "1" ]; then
        python setup.py sdist
        # Move out of source directory to avoid finding local scipy
        pushd dist
        pip install scipy* -v
        popd
        USE_WHEEL_BUILD="--no-build"
    fi
  - python -u $OPTIMIZE runtests.py -g -m $TESTMODE $COVERAGE $USE_WHEEL_BUILD 2>&1 | tee runtests.log
  - tools/validate_runtests_log.py $TESTMODE < runtests.log
  - if [ "${REFGUIDE_CHECK}" == "1" ]; then python runtests.py -g --refguide-check; fi
after_success:
  # Upload development docs, using deploy key from travis-ci encrypted file
  # https://developer.github.com/guides/managing-deploy-keys/
  # http://docs.travis-ci.com/user/encrypting-files/
  - |
    if [ "${REFGUIDE_CHECK}" == "1" -a "${TRAVIS_PULL_REQUEST}" == "false" -a "${TRAVIS_BRANCH}" == "master" ]; then
        set -e
        openssl aes-256-cbc -K $encrypted_35a522e29e4d_key -iv $encrypted_35a522e29e4d_iv -in tools/ci/devdocs-deploy.key.enc -out tools/ci/devdocs-deploy.key -d
        chmod 600 tools/ci/devdocs-deploy.key
        eval `ssh-agent -s`
        ssh-add tools/ci/devdocs-deploy.key
        git clone git@github.com:scipy/devdocs.git devdocs
        python -u $OPTIMIZE runtests.py -g --shell -- -c 'make -C doc PYTHON=python html-scipyorg'
        pushd devdocs
        (git checkout --orphan tmp && git branch -D gh-pages || true)
        git checkout --orphan gh-pages
        git reset --hard
        cp -R ../doc/build/html-scipyorg/. .
        touch .nojekyll
        git config --global user.email "scipy-travis-bot@nomail"
        git config --global user.name "scipy-travis-bot"
        git config --global push.default simple
        git add . > /dev/null
        git commit -m "Docs build of $TRAVIS_COMMIT"
        git push --set-upstream origin gh-pages --force
        popd
    fi
  # Upload coverage information
  - if [ "${COVERAGE}" == "--coverage" ]; then
        pushd build/testenv/lib/python*/site-packages/;
        cp ../../../../test/.coverage .;
        codecov;
        popd;
    fi
notifications:
  # Perhaps we should have status emails sent to the mailing list, but
  # let's wait to see what people think before turning that on.
  email: false
