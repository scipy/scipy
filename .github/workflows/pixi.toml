[project]
name = "scipy"
version = "1.16.0.dev0"
description = "Fundamental algorithms for scientific computing in Python"
authors = ["SciPy Developers <scipy-dev@python.org>"]
channels = ["conda-forge"]
platforms = ["linux-64"]

[dependencies]
compilers = ">=1.7.0,<2"
pkg-config = ">=0.29.2,<0.30"
ninja = ">=1.12.1,<2"
python = ">=3.12.0,<3.13"
meson = ">=1.5.1,<2"
meson-python = ">=0.16.0"
cython = ">=3.0.10,<4"
python-build = "*"
pip = "*"
blas-devel = "*"
numpy = ">=2.0.0"
pybind11 = ">=2.13.1"
pythran = ">=0.15.0"
rich-click = "*"
pydevtool = "*"
# Add test dependencies to default list of dependencies so they show up in every
# environment without having to also see the test task in those other envs
pytest = "*"
hypothesis = "*"
pytest-xdist = "*"
threadpoolctl = "*"
pooch = "*"
mpmath = "*"
gmpy2 = "*"
ccache = ">=4.10.1,<5"

[feature.build.tasks]
build = { cmd = "python dev.py build -C-Dblas=blas -C-Dlapack=lapack -C-Duse-g77-abi=true", cwd = "../..", env = { CC = "ccache $CC", CXX = "ccache $CXX", FC = "ccache $FC" } }
wheel = { cmd = "python -m build -wnx -Cbuild-dir=build-whl && cp dist/*.whl ../../wheelhouse/", cwd = "../.." }

[feature.test.tasks]
test = { cmd = "python dev.py test", cwd = "../.." }

# BLAS/LAPACK features
[feature.openblas.dependencies]
libblas = { version = "*", build = "*openblas" }
openblas = ">=0.3.27,<0.4"

[feature.mkl.target.linux-64.dependencies]
libblas = { version = "*", build = "*mkl" }
mkl = ">=2023.2.0,<2025"


# CPU/CUDA features
[feature.cpu.tasks]
test-cpu = { cmd = "python dev.py test -b all", cwd = "../.." }

[feature.cuda]
platforms = ["linux-64"]
system-requirements = { cuda = "12" }

[feature.cuda.dependencies]
cuda-version = ">=12.0,<13"

[feature.cuda.tasks]
test-cuda = { cmd = "python dev.py test -b all", cwd = "../..", env = { SCIPY_DEVICE = "cuda" } }


# Array libraries we have support for
[feature.torch-base]
platforms = ["linux-64"]

[feature.torch-base.tasks]
test-torch = { cmd = "python dev.py test -b torch", cwd = "../.." }

[feature.torch-cpu.dependencies]
pytorch-cpu = "*"

[feature.torch-cuda.dependencies]
pytorch-gpu = "*"

[feature.torch-cuda.tasks]
test-torch-cuda = { cmd = "python dev.py test -b torch", cwd = "../..", env = { SCIPY_DEVICE = "cuda" } }


[feature.cupy]
platforms = ["linux-64"]

[feature.cupy.dependencies]
cupy = "*"

[feature.cupy.tasks]
test-cupy = { cmd = "python dev.py test -b cupy", cwd = "../.." }


[feature.jax-cpu]
# Windows support pending: https://github.com/conda-forge/jaxlib-feedstock/issues/161
platforms = ["linux-64"]

[feature.jax-cpu.dependencies]
jax = "*"
jaxlib = { version = "*", build = "*cpu*" }

[feature.jax-cuda]
platforms = ["linux-64"]

[feature.jax-cuda.dependencies]
jax = "*"
jaxlib = { version = "*", build = "*cuda*" }

[feature.jax-base.tasks]
test-jax = { cmd = "python dev.py test -b jax.numpy", cwd = "../.." }

[feature.jax-cuda.tasks]
test-jax-cuda = { cmd = "python dev.py test -b jax.numpy", cwd = "../..", env = { SCIPY_DEVICE = "cuda" } }

[feature.array_api_strict.dependencies]
array-api-strict = "*"

[feature.array_api_strict.tasks]
test-strict = { cmd = "python dev.py test -b array_api_strict", cwd = "../.." }


[environments]
default = ["build", "test", "openblas"]
torch = ["torch-base", "torch-cpu", "mkl"]
torch-cuda = ["torch-base", "torch-cuda", "mkl", "cuda"]
cupy = ["cupy"]
jax = ["jax-base", "jax-cpu"]
jax-cuda = ["jax-base", "jax-cuda", "cuda"]
array-api-strict = ["array_api_strict"]
array-api = [
    "cpu",
    "array_api_strict",
    "jax-base",
    "jax-cpu",
    "mkl",
    "torch-base",
    "torch-cpu",
]
array-api-cuda = [
    "cuda",
    "array_api_strict",
    "cupy",
    "jax-base",
    "jax-cuda",
    "mkl",
    "torch-base",
    "torch-cuda",
    "test",
]
