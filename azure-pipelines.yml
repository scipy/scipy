trigger:
  # start a new build for every push
  batch: False
  branches:
    include:
      - master
      - maintenance/*

# the version of OpenBLAS used is currently 0.3.5.dev
# despite the numbering on the downloaded files
# and should be updated to match scipy-wheels as appropriate

variables:
    disable.coverage.autogenerate: 'true'
jobs:
- job: Linux_Python_36_32bit_full
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
           docker pull tylerreddy/scipy_gcov_debug
           docker run -v $(pwd):/scipy tylerreddy/scipy_gcov_debug /bin/bash -c "cd scipy && \
           export NPY_DISTUTILS_APPEND_FLAGS=1 && \
           export CC='gcc --coverage' && \
           export CXX='g++ --coverage' && \
           export F77='gfortran --coverage' && \
           export F90='gfortran --coverage' && \
           export LDFLAGS='--coverage' && \
           export FOPT='-O1' && \
           export OPT='-O1' && \
           python3.6 -u runtests.py --mode=fast -- -n auto -rsx --junitxml=junit/test-results.xml --cov=scipy --cov-report=xml && \
           find . -name '*.gcno' -type f -exec gcov -pb {} + && \
           /root/.local/bin/gcovr -r . --xml -o coverage_compiled_langs.xml && \
           mono ../ReportGenerator*/tools/net47/ReportGenerator.exe '-reports:**/coverage*.xml' '-targetdir:.' -reporttypes:'HtmlInline_AzurePipelines;Cobertura' && \
           find . -name 'coverage*.xml' -delete && \
           mkdir htmlcov && mv *.htm htmlcov && chmod -R 777 htmlcov"
    displayName: 'Run 32-bit Ubuntu Docker Build / Tests'
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      failTaskOnFailedTests: true
      testRunTitle: 'Publish test results for Python 3.6-32 bit full Linux'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/Cobertura.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
