trigger:
  # start a new build for every push
  batch: False
  branches:
    include:
      - main
      - maintenance/*
  paths:
    include:
      - '*'
    exclude:
      - 'benchmarks/*'
      - './*.txt'
      - 'site.cfg.example'

pr:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

# the version of OpenBLAS used is currently 0.3.21.dev
# and should be updated to match tools/openblas_support as appropriate
variables:
    openblas_version: 0.3.21.dev
    pre_wheels: https://pypi.anaconda.org/scipy-wheels-nightly/simple
    CCACHE_DIR: $(Pipeline.Workspace)/ccache
    SCIPY_AVAILABLE_MEM: 3G
    NPY_NUM_BUILD_JOBS: 2
    CCACHE_COMPRESS: 1
    # Using a single thread can actually speed up some computations
    OPENBLAS_NUM_THREADS: 1

stages:

- stage: Check
  jobs:
    - job: Skip
      pool:
        vmImage: 'ubuntu-22.04'
      variables:
        DECODE_PERCENTS: 'false'
        RET: 'true'
      steps:
      - bash: |
          git_log=`git log --max-count=1 --skip=1 --pretty=format:"%B" | tr "\n" " "`
          echo "##vso[task.setvariable variable=log]$git_log"
      - bash: echo "##vso[task.setvariable variable=RET]false"
        condition: or(contains(variables.log, '[skip azp]'), contains(variables.log, '[azp skip]'), contains(variables.log, '[skip ci]'), contains(variables.log, '[ci skip]'))
      - bash: echo "##vso[task.setvariable variable=start_main;isOutput=true]$RET"
        name: result

- stage: Main
  condition: and(succeeded(), eq(dependencies.Check.outputs['Skip.result.start_main'], 'true'))
  dependsOn: Check
  variables:
    AZURE_CI: 'true'
  jobs:
  - job: Linux_Python_39_32bit_full
    timeoutInMinutes: 90
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))  # skip for PR merges
    pool:
      vmImage: 'ubuntu-22.04'  # vm does not matter as we use docker
    steps:
    - script: |
        git submodule update --init
      displayName: 'Fetch submodules'
    - script: |
            # For when updating this job to Meson: the `openblas` used here is
            # missing pkg-config files. Ubunty Jammy (LTS 22.04) has openblas
            # 3.20, so if that Docker image is available by then, just remove
            # the unusual install method. For the bug report about missing .pc
            # files: https://github.com/MacPython/openblas-libs/issues/74
            set -euo pipefail
            docker pull i386/ubuntu:focal
            docker run -v $(pwd):/scipy i386/ubuntu:focal /usr/bin/linux32 /bin/bash -c "cd scipy && \
            export DEBIAN_FRONTEND=noninteractive && \
            apt-get -y update && \
            apt-get -y install curl python3.9-dev python3.9 python3-distutils pkg-config libpng-dev libjpeg8-dev libfreetype6-dev && \
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
            python3.9 get-pip.py && \
            pip3 --version && \
            pip3 install setuptools==59.6.0 wheel numpy==1.21.6 cython==0.29.33 pybind11 pytest pytest-timeout pytest-xdist pytest-env Pillow mpmath pythran pooch && \
            apt-get -y install build-essential gfortran wget && \
            cd .. && \
            mkdir openblas && cd openblas && \
            target=\$(python3.9 ../scipy/tools/openblas_support.py) && \
            cp -r \$target/lib/* /usr/lib && \
            cp \$target/include/* /usr/include && \
            cd ../scipy && \
            python3.9 setup.py install && \
            python3.9 tools/openblas_support.py --check_version $(openblas_version) && \
            python3.9 runtests.py -n --mode=full -- -n auto -s --junitxml=junit/test-results.xml --durations=10 --timeout=60"
      displayName: 'Run 32-bit Ubuntu Docker Build / Tests'
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/test-*.xml'
        failTaskOnFailedTests: true
        testRunTitle: 'Publish test results for Python 3.9-32 bit full Linux'
