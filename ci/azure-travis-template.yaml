# This template is for the migration of Travis CI jobs to azure
# It is still missing debug python support

parameters:
- name: test_mode
  type: string
  default: fast
  values:
    - fast
    - full
- name: use_wheel
  type: boolean
  default: false
- name: use_sdist
  type: boolean
  default: false
- name: numpy_spec
  type: string
- name: other_spec
  type: string
  default: ''
- name: use_64bit_blas
  type: boolean
  default: false

steps:
# Handle caching
- task: Cache@2
  inputs:
    key: 'ccache | $(Agent.OS) | $(Agent.JobName)'
    path: $(CCACHE_DIR)
  displayName: ccache
# Install dependencies
- ${{ if eq(parameters.use_64bit_blas, true) }}:
  - script: |
      target=$(python tools/openblas_support.py)
      echo "[openblas64_]" > site.cfg
      echo "library_dirs = $target/lib" >> site.cfg
      echo "include_dirs = $target/include" >> site.cfg
      echo "runtime_library_dirs = $target/lib" >> site.cfg
    displayName: 'Enable 64-bit OpenBlas'
- script: >-
    sudo apt-get update -y &&
    sudo apt-get install -y
    libatlas-base-dev
    liblapack-dev
    libopenblas-dev
    pkg-config
    gfortran
    libgmp-dev
    libmpfr-dev
    libsuitesparse-dev
    ccache
    libmpc-dev
  displayName: 'Install common apt dependencies'
- script: 'echo "##vso[task.prependpath]/usr/lib/ccache"'
  displayName: 'Add ccache to path'
- script: >-
    pip install --upgrade ${{parameters.numpy_spec}} &&
    pip install --upgrade pip setuptools==59.6.0 wheel build meson meson-python &&
    pip install ${{parameters.other_spec}}
    "cython==0.29.33"
    gmpy2
    threadpoolctl
    mpmath
    pooch
    pythran
    pybind11
    pytest
    pytest-xdist
    pytest-timeout
  displayName: 'Install common python dependencies'
- ${{ if eq(parameters.test_mode, 'full') }}:
  - script: pip install matplotlib pooch
    displayName: 'Install full mode optional dependencies'
- script: pip uninstall -y nose
  displayName: 'Uninstall Nose'
- script: git submodule update --init
  displayName: 'Fetch submodules'


# Build and test SciPy
- script: |
    set -euo pipefail
    python -c 'import numpy as np; print("relaxed strides checking:", np.ones((10,1),order="C").flags.f_contiguous)'
    python -c 'import mpmath.libmp; assert mpmath.libmp.BACKEND == "gmpy"'
- ${{ if eq(parameters.use_wheel, true) }}:
  - script: |
      set -euo pipefail
      # Run setup.py build before pip wheel, to build in current directory
      # and make more efficient use of ccache
      echo "setup.py build"
      python tools/suppress_output.py python setup.py build
      echo "setup.py bdist_wheel"
      # Still testing distutils here (`pip wheel --no-use-pep517` cannot be
      # used, so back to `setup.py` it is ...)
      python tools/suppress_output.py python setup.py bdist_wheel
      pip install --no-cache-dir dist/scipy*.whl
    displayName: 'Install SciPy from Wheel'
- ${{ if eq(parameters.use_sdist, true) }}:
  - script: |
      set -euo pipefail
      echo "Build sdist via `build` (uses pyproject.toml)"
      python -m build --sdist
      # Move out of source directory to avoid finding local scipy
      cd dist
      echo "pip install"
      # Note: uses build isolation, which is what pip does with sdists by default
      # Note: don't use a fixed build dir (which would help for ccache), because
      #       --build is partially broken and the workaround in commit b4617dd764
      #       messes with build isolation.
      pip install scipy*.tar.gz -v
    displayName: 'Install SciPy from SDist'
- script: 'python -u runtests.py -g -j2 --build-only ${USE_WHEEL_BUILD:-}'
  env:
    ${{ if or(eq(parameters.use_wheel, true), eq(parameters.use_sdist, true))}}:
      USE_WHEEL_BUILD: '--no-build'
  displayName: 'Build SciPy'
- script: |
    set -euo pipefail
    python -u runtests.py -g -j2 -m ${{ parameters.test_mode }} ${USE_WHEEL_BUILD:-} -- -rfEX --durations=10 --timeout=60 2>&1 | tee runtests.log
    tools/validate_runtests_log.py ${{ parameters.test_mode }} < runtests.log
  env:
    ${{ if or(eq(parameters.use_wheel, true), eq(parameters.use_sdist, true))}}:
      USE_WHEEL_BUILD: '--no-build'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/main'))  # skip for PR merges
  displayName: 'Run tests'
- script: ./tools/check_pyext_symbol_hiding.sh build
  displayName: "Check dynamic symbol hiding works"
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
  failOnStderr: true
